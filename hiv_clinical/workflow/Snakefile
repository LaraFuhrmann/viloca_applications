from snakemake.utils import Paramspace
import yaml

def load_config(path):
    with open(path, 'r') as stream:
        config = yaml.safe_load(stream)
    return config

import pandas as pd

config = load_config("config/config.yaml")

# setup paramspace
df_samples = pd.read_csv(config["vpipe"]['input']['samples_file'], comment="#", sep="\t")

module vpipe:
    snakefile: github("cbg-ethz/V-pipe", path="workflow/Snakefile", tag="v3.0.0.pre0")
    config: config["vpipe"]

use rule * from vpipe as vpipe_*

rule all:
    input:
        rules.vpipe_all.input,
        "results/all_mutations.annotated.csv",
    default_target: True


# output should go here: results/dicer_KO/results_vpipe/replicate_a/passage_10/variants
rule run_viloca:
    input:
        fname_bam="results/{sample}/alignments/REF_aln.bam",
        fname_reference=config['vpipe']['input']['reference'],
    output:
        fname_snv_vcf="results/{sample}/variants/snvs.vcf",
        fname_csv="results/{sample}/variants/cooccurring_mutations.csv",
        dname_work=directory(
            "results/{sample}/variants/"
        ),
    conda:
        "envs/viloca.yaml"
    resources:
        mem_mb=20000,
        runtime=5760,
        threads=10,
    script:
        "scripts/viloca.py"


rule annotate_mutations:
    input:
        fname_snv_vcf="results/{sample}/variants/snvs.vcf",
    output:
        fname_mutations_annotated="results/{sample}/variants/snvs.annotated.csv",
    params:
        fname_hxb2_annotations="resources/hxb2_genome_annoations.csv",
        fname_genes="resources/genes_hiv1.json"
    conda:
        "envs/collect_mutations.yaml"
    script:
        "./scripts/annotate_mutations.py"


rule collect_annotated_mutations:
    input:
        fnames_snv_csv=expand("{dataset}/variants/snvs.annotated.csv", dataset=vpipe.datasets),
    output:
        fname_all_mutations="results/all_mutations.annotated.csv",
    conda:
        "envs/collect_mutations.yaml"
    script:
        "./scripts/collect_mutations.py"
